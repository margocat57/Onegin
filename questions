#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>
#include <ctype.h>
#include <assert.h>
#include <stdio.h>
#include <stdlib.h>
#include "structures_consts.h"

struct file_in_array
{
    size_t amount_str;
    size_t amount_of_symb;
    char *all_strings_in_file;
};

file_in_array file_information(const char *name_of_file)
{
    assert(name_of_file != NULL);
    file_in_array fptr_in_array = {};
    FILE *fptr = fopen(name_of_file, "r");
    assert(fptr != NULL);

    struct stat file_info;
    stat(name_of_file, &file_info);

    char *all_strings_in_file = (char *)calloc(file_info.st_size + 1, sizeof(char));
    assert(all_strings_in_file != NULL);
    fread(all_strings_in_file, sizeof(char), file_info.st_size, fptr);

    int nmb_of_str = 0;

    for (int i = 0; i < file_info.st_size; i++)
    {
        if (all_strings_in_file[i] == '\n' || i == file_info.st_size - 1)
        {
            nmb_of_str++;
        }
    }

    fptr_in_array.amount_of_symb = file_info.st_size + 1;
    fptr_in_array.amount_str = nmb_of_str;
    fptr_in_array.all_strings_in_file = all_strings_in_file;
    printf("how_many_strings = %lu\n", fptr_in_array.amount_str);

    fclose(fptr);
    // free(all_strings_in_file);
    return fptr_in_array;
}

char **create_ptr_array(file_in_array *arr)
{
    assert(arr != NULL);
    char **array_with_ptrs = (char **)calloc(arr->amount_str, sizeof(char *));
    assert(array_with_ptrs != NULL);

    size_t num_of_elem = 0;
    array_with_ptrs[num_of_elem] = &((arr->all_strings_in_file)[0]);
    num_of_elem = 1;

    for (int i = 1; i < arr->amount_of_symb; i++)
    {
        if ((arr->all_strings_in_file)[i] == '\n' && i != arr->amount_of_symb - 1)
        {
            (arr->all_strings_in_file)[i] = '\0';
            array_with_ptrs[num_of_elem] = &((arr->all_strings_in_file)[i + 1]);
            num_of_elem++;
        }
    }
    //(arr->all_strings_in_file)[arr->amount_of_symb - 1] = '\0';
    // почему когда я закомментила этот код то оно стало работать, а если его оставить,
    // то у нас бесконечное число итераций
    // дополнительный символ нужно добавлять, иначе strlen на последней строке будет искать \0 и не найдя его выйдет за границы массива
    return array_with_ptrs;
}
